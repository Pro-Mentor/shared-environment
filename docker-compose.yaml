version: "3.8"

services:
  postgres:
    image: postgres:14.8
    hostname: postgres
    container_name: postgres
    networks:
      - promentor_net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=admin
      - TIMESCALEDB_TELEMETRY=off
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./provision/postgres:/docker-entrypoint-initdb.d

  keycloak:
    depends_on:
      - postgres
    build:
      context: ./keycloak
    hostname: keycloak
    container_name: keycloak
    networks:
      - promentor_net
    ports:
      - "${KEYCLOAK_EXTERNAL_PORT:-8080}:8080"
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_HOSTNAME=${KC_HOSTNAME}
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_HTTPS=false
      - DEBUG=true
    volumes:
      - ./provision/keycloak:/tmp/import
      # disable theam cache
      - ./keycloak/scripts/disable-theam-cache.cli:/opt/jboss/startup-scripts/disable-theam-cache.cli
    command:
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=dir"
      - "-Dkeycloak.migration.dir=/tmp/import"
      - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"

  mongo:
    image: mongo
    hostname: mongo
    container_name: mongo
    networks:
      - promentor_net
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./provision/mongo:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:3.12
    hostname: rabbitmq
    container_name: rabbitmq
    networks:
      - promentor_net
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/mnesia/
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/

networks:
  promentor_net:

volumes:
  db-data:
